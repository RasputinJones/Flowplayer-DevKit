/* * This file is part of Flowplayer, http://flowplayer.org * *Copyright (c) 2008, 2009 Flowplayer Oy * * Released under the MIT License: * http://www.opensource.org/licenses/mit-license.php */package org.flowplayer.controls.button {	import org.flowplayer.controls.Config;	import org.flowplayer.controls.flash.VolumeIcon;	import org.flowplayer.controls.flash.VolumeOffIcon;	import org.flowplayer.util.Arrange;	import org.flowplayer.view.AnimationEngine;		import flash.display.DisplayObjectContainer;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;		/**	 * @author api	 */	public class ToggleVolumeMuteButton extends AbstractToggleButton {		public function ToggleVolumeMuteButton(config:Config, animationEngine:AnimationEngine) {			super(config, animationEngine);			addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}        override public function get name():String {            return "mute";        }		private function onAddedToStage(event:Event):void {			log.debug("adding hit area");			var hitSprite:Sprite = new Sprite();			hitSprite.graphics.beginFill(0, 0);			hitSprite.graphics.drawRect(0, 0, _upStateFace.width, _upStateFace.height);			hitSprite.graphics.endFill();			hitSprite.mouseEnabled = false;			addChild(hitSprite);			hitArea = hitSprite;		}		override protected function onMouseOut(event:MouseEvent = null):void {			_upStateFace.alpha = _downStateFace.alpha = .7;			hideTooltip();		}		override protected function onMouseOver(event:MouseEvent):void {			_upStateFace.alpha = _downStateFace.alpha = 1;			showTooltip();		}//		//		override public function set height(value:Number):void {//			_upStateFace.height = value;//			_downStateFace.height = value;//			arrange();//		}//		override public function set width(value:Number):void {//			_upStateFace.width = value;//			_downStateFace.width = value;//			arrange();//		}        override protected function createUpStateFace():DisplayObjectContainer {            return DisplayObjectContainer(SkinClasses.getMuteButton());        }        override protected function createDownStateFace():DisplayObjectContainer {            return DisplayObjectContainer(SkinClasses.getUnmuteButton());        }		override protected function get tooltipLabel():String {			return isDown ? config.tooltips.unmute : config.tooltips.mute;		}			}}